{"ast":null,"code":"// AUTH\nimport decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token'); // redirect to homepage and reset the state of th application\n\n    window.location.assign('/');\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/mwpx7/Documents/GitHub/webdev-gifts/client/src/utils/auth.js"],"names":["decode","AuthService","getProfile","getToken","isTokenExpired","token","decoded","exp","Date","now","err","localStorage","getItem","login","idToken","setItem","window","location","assign","logout","removeItem"],"mappings":"AAAA;AAEA,OAAOA,MAAP,MAAmB,YAAnB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,UAAU,GAAG;AACb,WAAOF,MAAM,CAAC,KAAKG,QAAL,EAAD,CAAb;AACC;;AAIDC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,QAAG;AACC,YAAMC,OAAO,GAAGN,MAAM,CAACK,KAAD,CAAtB;;AACA,UAAGC,OAAO,CAACC,GAAR,GAAcC,IAAI,CAACC,GAAL,KAAY,IAA7B,EAAmC;AAC/B,eAAO,IAAP;AACH,OAFD,MAEO,OAAO,KAAP;AACV,KALD,CAKE,OAAOC,GAAP,EAAY;AACV,aAAO,KAAP;AACH;AACJ;;AAEDP,EAAAA,QAAQ,GAAG;AACP,WAAOQ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAP;AACH;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACXH,IAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCD,OAAjC;AACAE,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJR,IAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB,EADI,CAEJ;;AACAJ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;AACH;;AA/Ba;;AAkClB,eAAe,IAAIjB,WAAJ,EAAf","sourcesContent":["// AUTH\r\n\r\nimport decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n    return decode(this.getToken());\r\n    }\r\n\r\n\r\n    \r\n    isTokenExpired(token) {\r\n        try{\r\n            const decoded = decode(token);\r\n            if(decoded.exp < Date.now()/ 1000) {\r\n                return true;\r\n            } else return false;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n    \r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('id_token');\r\n        // redirect to homepage and reset the state of th application\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}