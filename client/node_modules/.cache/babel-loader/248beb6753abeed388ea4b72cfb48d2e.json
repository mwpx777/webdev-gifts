{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mwpx7\\\\Documents\\\\GitHub\\\\webdev-gifts\\\\client\\\\src\\\\components\\\\ProductItem\\\\index.js\",\n    _s = $RefreshSig$();\n\n// PRODUCT ITEM\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // import { pluralize } from '../../utils/helpers';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductItem(item) {\n  _s();\n\n  const {\n    image,\n    name,\n    _id,\n    price\n  } = item;\n  const [state, dispatch] = useStoreContext();\n  const {\n    cart\n  } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === _id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"card px-1 py-1\">\n    //     <Link to={`/products/${_id}`}>\n    //         <img alt={name} src={`/images/${image}`} />\n    //         <p>{name}</p>\n    //     </Link>\n    //     <div>\n    //         <span>${price}</span>\n    //         <button onClick={addToCart}>Add to cart!</button>\n    //     </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(ProductItem, \"qZ9GHftpIX86+oMFVfpp6r+956w=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = ProductItem;\n;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["C:/Users/mwpx7/Documents/GitHub/webdev-gifts/client/src/components/ProductItem/index.js"],"names":["React","Link","useStoreContext","ADD_TO_CART","UPDATE_CART_QUANTITY","idbPromise","ProductItem","item","image","name","_id","price","state","dispatch","cart","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,qBAAlD;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAAA;;AACvB,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA,IAFE;AAGFC,IAAAA,GAHE;AAIFC,IAAAA;AAJE,MAKFJ,IALJ;AAOA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBX,eAAe,EAAzC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWF,KAAjB;;AAEA,QAAMG,SAAS,GAAG,MAAM;AACpB,UAAMC,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAWC,QAAD,IAAcA,QAAQ,CAACR,GAAT,KAAiBA,GAAzC,CAAnB;;AACA,QAAIM,UAAJ,EAAgB;AACZH,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEf,oBADD;AAELM,QAAAA,GAAG,EAAEA,GAFA;AAGLU,QAAAA,gBAAgB,EAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,GAAwC;AAHrD,OAAD,CAAR;AAKAf,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EACtB,GAAGW,UADmB;AACPI,QAAAA,gBAAgB,EAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,GAAwC;AADnD,OAAhB,CAAV;AAGH,KATD,MASO;AACHP,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEhB,WADD;AAELmB,QAAAA,OAAO,EAAE,EAAE,GAAGf,IAAL;AAAWa,UAAAA,gBAAgB,EAAE;AAA7B;AAFJ,OAAD,CAAR;AAIAf,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGE,IAAL;AAAWa,QAAAA,gBAAgB,EAAE;AAA7B,OAAhB,CAAV;AACH;AACJ,GAlBD;;AAoBA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAZJ;AAgBH;;GA/CQd,W;UAQqBJ,e;;;KARrBI,W;AA+CR;AAED,eAAeA,WAAf","sourcesContent":["// PRODUCT ITEM\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// import { pluralize } from '../../utils/helpers';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductItem(item) {\n    const {\n        image,\n        name,\n        _id,\n        price,\n    } = item;\n\n    const [state, dispatch] = useStoreContext();\n    const { cart } = state;\n\n    const addToCart = () => {\n        const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n        if (itemInCart) {\n            dispatch({\n                type: UPDATE_CART_QUANTITY,\n                _id: _id,\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n            });\n            idbPromise('cart', 'put', {\n                ...itemInCart, purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n            });\n        } else {\n            dispatch({\n                type: ADD_TO_CART,\n                product: { ...item, purchaseQuantity: 1 }\n            });\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n        }\n    }\n\n    return (\n        // <div className=\"card px-1 py-1\">\n        //     <Link to={`/products/${_id}`}>\n        //         <img alt={name} src={`/images/${image}`} />\n        //         <p>{name}</p>\n        //     </Link>\n        //     <div>\n        //         <span>${price}</span>\n        //         <button onClick={addToCart}>Add to cart!</button>\n        //     </div>\n        // </div>\n\n        <div className=\"card\">\n            \n        </div>\n    );\n};\n\nexport default ProductItem;"]},"metadata":{},"sourceType":"module"}