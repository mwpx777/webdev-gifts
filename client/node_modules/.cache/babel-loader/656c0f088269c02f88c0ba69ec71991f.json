{"ast":null,"code":"// CART\n// import React, {useEffect} from 'react';\n// import CartItem from '../CartItem';\n// import Auth from '../../utils/auth';\n// import './styles.css';\n// import { useLazyQuery } from '@apollo/react-hooks';\n// import { useStoreContext } from '../../utils/GlobalState';\n// import { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\n// import { idbPromise } from '../../utils/helpers';\n// import { loadStripe } from '@stripe/stripe-js';\n// import {QUERY_CHECKOUT} from '../../utils/queries';\n// const stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n// const Cart = () => {\n//     const [state, dispatch] = useStoreContext();\n//     // only run when checkout is called\n//     // data contains checkout info\n//     const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n//     useEffect(() => {\n//         if (data) {\n//             stripePromise.then((res) => {\n//                 res.redirectToCheckout({ sessionId: data.checkout.session })\n//             })\n//         }\n//     }, [data])\n//     useEffect(() => {\n//         async function getCart() {\n//             const cart = await idbPromise('cart', 'get');\n//             dispatch({\n//                 type: ADD_MULTIPLE_TO_CART,\n//                 products: [...cart]\n//             });\n//         };\n//         // if nothing in state for cart, run getCart function to get items from objectStore and save to GlobalState object\n//         if (!state.cart.length) {\n//             getCart();\n//         }\n//     }, [state.cart.length, dispatch]);\n//     function toggleCart() {\n//         dispatch({\n//             type: TOGGLE_CART\n//         });\n//     }\n//     if (!state.cartOpen) {\n//         return (\n//             <div className=\"cart-closed\" onClick={toggleCart}>\n//                 <span role=\"img\" aria-label=\"trash\">ðŸ›’</span>\n//             </div>\n//         );\n//     };\n//     function calculateTotal() {\n//         let sum = 0;\n//         state.cart.forEach(item => {\n//             sum += item.price * item.purchaseQuantity;\n//         });\n//         return sum.toFixed(2);\n//     }\n//     function submitCheckout() {\n//         const productIds = [];\n//         // loop over items in cart and add their item._id to productIds empty array\n//         state.cart.forEach(item => {\n//             for (let i = 0; i < item.purchaseQuantity; i++) {\n//                 productIds.push(item._id);\n//             }\n//         });\n//         getCheckout({\n//             // the productIds get passed into {data} for const getCheckout method above\n//             variables: { products: productIds }\n//         })\n//     }\n//     return (\n//         <div className=\"cart\">\n//             <div className=\"close\" onClick={toggleCart}>[close]</div>\n//             <h2>Shopping Cart</h2>\n//             {state.cart.length >= 1? (\n//                 <div>\n//                     {state.cart.map(item => (\n//                         <CartItem key={item._id} item={item} />\n//                     ))}\n//                     <div className=\"flex-row space-between\">\n//                         <strong>Total: ${calculateTotal()}</strong>\n//                         {\n//                             Auth.loggedIn() ?\n//                                 <button onClick={submitCheckout}>Checkout</button>\n//                                 :\n//                                 <span>Login to checkout!</span>\n//                         }\n//                     </div>\n//                 </div>\n//             ) : (\n//                 <h3>\n//                     <span role=\"img\" aria-label=\"shocked\">ðŸ˜±</span>\n//                     You haven't added any items to your cart yet!\n//                 </h3>\n//             )}\n//         </div>\n//     )\n// };\n// export default Cart;","map":{"version":3,"sources":["C:/Users/mwpx7/Documents/GitHub/webdev-gifts/client/src/components/Cart/index.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["// CART\n\n// import React, {useEffect} from 'react';\n// import CartItem from '../CartItem';\n// import Auth from '../../utils/auth';\n// import './styles.css';\n// import { useLazyQuery } from '@apollo/react-hooks';\n// import { useStoreContext } from '../../utils/GlobalState';\n// import { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\n// import { idbPromise } from '../../utils/helpers';\n// import { loadStripe } from '@stripe/stripe-js';\n// import {QUERY_CHECKOUT} from '../../utils/queries';\n\n// const stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\n// const Cart = () => {\n//     const [state, dispatch] = useStoreContext();\n\n//     // only run when checkout is called\n//     // data contains checkout info\n//     const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n//     useEffect(() => {\n//         if (data) {\n//             stripePromise.then((res) => {\n//                 res.redirectToCheckout({ sessionId: data.checkout.session })\n//             })\n//         }\n//     }, [data])\n\n//     useEffect(() => {\n//         async function getCart() {\n//             const cart = await idbPromise('cart', 'get');\n//             dispatch({\n//                 type: ADD_MULTIPLE_TO_CART,\n//                 products: [...cart]\n//             });\n//         };\n//         // if nothing in state for cart, run getCart function to get items from objectStore and save to GlobalState object\n//         if (!state.cart.length) {\n//             getCart();\n//         }\n//     }, [state.cart.length, dispatch]);\n\n//     function toggleCart() {\n//         dispatch({\n//             type: TOGGLE_CART\n//         });\n//     }\n//     if (!state.cartOpen) {\n//         return (\n//             <div className=\"cart-closed\" onClick={toggleCart}>\n//                 <span role=\"img\" aria-label=\"trash\">ðŸ›’</span>\n//             </div>\n//         );\n//     };\n\n//     function calculateTotal() {\n//         let sum = 0;\n//         state.cart.forEach(item => {\n//             sum += item.price * item.purchaseQuantity;\n//         });\n//         return sum.toFixed(2);\n//     }\n\n//     function submitCheckout() {\n//         const productIds = [];\n//         // loop over items in cart and add their item._id to productIds empty array\n//         state.cart.forEach(item => {\n//             for (let i = 0; i < item.purchaseQuantity; i++) {\n//                 productIds.push(item._id);\n//             }\n//         });\n//         getCheckout({\n//             // the productIds get passed into {data} for const getCheckout method above\n//             variables: { products: productIds }\n//         })\n//     }\n\n//     return (\n//         <div className=\"cart\">\n//             <div className=\"close\" onClick={toggleCart}>[close]</div>\n//             <h2>Shopping Cart</h2>\n//             {state.cart.length >= 1? (\n//                 <div>\n//                     {state.cart.map(item => (\n//                         <CartItem key={item._id} item={item} />\n//                     ))}\n//                     <div className=\"flex-row space-between\">\n//                         <strong>Total: ${calculateTotal()}</strong>\n//                         {\n//                             Auth.loggedIn() ?\n//                                 <button onClick={submitCheckout}>Checkout</button>\n//                                 :\n//                                 <span>Login to checkout!</span>\n//                         }\n//                     </div>\n//                 </div>\n//             ) : (\n//                 <h3>\n//                     <span role=\"img\" aria-label=\"shocked\">ðŸ˜±</span>\n//                     You haven't added any items to your cart yet!\n//                 </h3>\n//             )}\n//         </div>\n\n//     )\n// };\n\n// export default Cart;\n\n"]},"metadata":{},"sourceType":"module"}