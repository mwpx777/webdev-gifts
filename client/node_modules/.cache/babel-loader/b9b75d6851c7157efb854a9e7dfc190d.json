{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mwpx7\\\\Documents\\\\GitHub\\\\webdev-gifts\\\\client\\\\src\\\\components\\\\ProductList\\\\index.js\",\n    _s = $RefreshSig$();\n\n// PRODUCT LIST\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport idbPromise from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductList() {\n  _s();\n\n  const [state, dispatch] = useStoreContext();\n  const {\n    currentCategory\n  } = state;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then(products => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" container\",\n    children: [state.products.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: filterProducts().map(product => /*#__PURE__*/_jsxDEV(ProductItem, {\n        _id: product._id,\n        image: product.image,\n        name: product.name,\n        price: product.price,\n        className: \"col-sm\",\n        id: \"cards\"\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Your cart is empty!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spinner,\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductList, \"5EFEb9FYc1KGyEUAmLNh5IMPtTo=\", false, function () {\n  return [useStoreContext, useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["C:/Users/mwpx7/Documents/GitHub/webdev-gifts/client/src/components/ProductList/index.js"],"names":["React","useEffect","useQuery","ProductItem","useStoreContext","UPDATE_PRODUCTS","QUERY_PRODUCTS","spinner","idbPromise","ProductList","state","dispatch","currentCategory","loading","data","type","products","forEach","product","then","filterProducts","filter","category","_id","length","map","image","name","price"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,eAAe,EAAzC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAsBF,KAA5B;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBZ,QAAQ,CAACI,cAAD,CAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,IAAJ,EAAU;AACNH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEV,eADD;AAELW,QAAAA,QAAQ,EAAEF,IAAI,CAACE;AAFV,OAAD,CAAR;AAKAF,MAAAA,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAuBC,OAAD,IAAa;AAC/BV,QAAAA,UAAU,CAAC,UAAD,EAAa,KAAb,EAAoBU,OAApB,CAAV;AACH,OAFD;AAGH,KATD,MASO,IAAI,CAACL,OAAL,EAAc;AACjBL,MAAAA,UAAU,CAAC,UAAD,EAAa,KAAb,CAAV,CAA8BW,IAA9B,CAAoCH,QAAD,IAAc;AAC7CL,QAAAA,QAAQ,CAAC;AACLI,UAAAA,IAAI,EAAEV,eADD;AAELW,UAAAA,QAAQ,EAAEA;AAFL,SAAD,CAAR;AAIH,OALD;AAMH;AACJ,GAlBQ,EAkBN,CAACF,IAAD,EAAOD,OAAP,EAAgBF,QAAhB,CAlBM,CAAT;;AAoBA,WAASS,cAAT,GAA0B;AACtB,QAAI,CAACR,eAAL,EAAsB;AAClB,aAAOF,KAAK,CAACM,QAAb;AACH;;AACD,WAAON,KAAK,CAACM,QAAN,CAAeK,MAAf,CAAsBH,OAAO,IAAIA,OAAO,CAACI,QAAR,CAAiBC,GAAjB,KAAyBX,eAA1D,CAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,eAGKF,KAAK,CAACM,QAAN,CAAeQ,MAAf,gBAEG;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKJ,cAAc,GAAGK,GAAjB,CAAqBP,OAAO,iBACzB,QAAC,WAAD;AAEI,QAAA,GAAG,EAAEA,OAAO,CAACK,GAFjB;AAGI,QAAA,KAAK,EAAEL,OAAO,CAACQ,KAHnB;AAII,QAAA,IAAI,EAAER,OAAO,CAACS,IAJlB;AAKI,QAAA,KAAK,EAAET,OAAO,CAACU,KALnB;AAMI,QAAA,SAAS,EAAC,QANd;AAOI,QAAA,EAAE,EAAC;AAPP,SACSV,OAAO,CAACK,GADjB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFH,gBAmBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBR,EA0BKV,OAAO,gBACJ;AAAK,MAAA,GAAG,EAAEN,OAAV;AAAmB,MAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADI,GACkC,IA3B9C;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA/DQE,W;UACqBL,e,EAEAF,Q;;;KAHrBO,W;AAiET,eAAeA,WAAf","sourcesContent":["// PRODUCT LIST\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport idbPromise from '../../utils/helpers';\n\nfunction ProductList() {\n    const [state, dispatch] = useStoreContext();\n    const { currentCategory } = state;\n    const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n    useEffect(() => {\n        if (data) {\n            dispatch({\n                type: UPDATE_PRODUCTS,\n                products: data.products\n            });\n\n            data.products.forEach((product) => {\n                idbPromise('products', 'put', product);\n            });\n        } else if (!loading) {\n            idbPromise('products', 'get').then((products) => {\n                dispatch({\n                    type: UPDATE_PRODUCTS,\n                    products: products\n                });\n            })\n        }\n    }, [data, loading, dispatch]);\n\n    function filterProducts() {\n        if (!currentCategory) {\n            return state.products;\n        }\n        return state.products.filter(product => product.category._id === currentCategory);\n    }\n\n    return (\n        <div className=\" container\" >\n\n\n            {state.products.length ? (\n\n                <div className=\"row\" >\n                    {filterProducts().map(product => (\n                        <ProductItem\n                            key={product._id}\n                            _id={product._id}\n                            image={product.image}\n                            name={product.name}\n                            price={product.price}\n                            className=\"col-sm\"\n                            id=\"cards\"\n                        />\n                    ))}\n                </div>\n\n\n\n            ) : (\n                <h3> Your cart is empty!</h3>\n            )}\n\n\n            {loading ?\n                <img src={spinner} alt=\"loading\" /> : null}\n        </div>\n    );\n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}