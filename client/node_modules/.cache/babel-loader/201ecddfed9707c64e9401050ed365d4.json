{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mwpx7\\\\Documents\\\\GitHub\\\\webdev-gifts\\\\client\\\\src\\\\components\\\\ProductItem\\\\index.js\",\n    _s = $RefreshSig$();\n\n// PRODUCT ITEM\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // import { pluralize } from '../../utils/helpers';\n\nimport { useStoreContent } from '../../utils/GlobaState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductItem() {\n  _s();\n\n  const {\n    image,\n    name,\n    _id,\n    price\n  } = item;\n  const [state, dispatch] = useStoreContext();\n  const {\n    cart\n  } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === _id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card px-1 py-1\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/products/${_id}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: name,\n        src: `/images/${image}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"$\", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToCart,\n        children: \"Add to cart!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductItem, \"qZ9GHftpIX86+oMFVfpp6r+956w=\", true);\n\n_c = ProductItem;\n;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["C:/Users/mwpx7/Documents/GitHub/webdev-gifts/client/src/components/ProductItem/index.js"],"names":["React","Link","useStoreContent","ADD_TO_CART","UPDATE_CART_QUANTITY","idbPromise","ProductItem","image","name","_id","price","item","state","dispatch","useStoreContext","cart","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,qBAAlD;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA,IAFE;AAGFC,IAAAA,GAHE;AAIFC,IAAAA;AAJE,MAKFC,IALJ;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,eAAe,EAAzC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWH,KAAjB;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACpB,UAAMC,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAWC,QAAD,IAAcA,QAAQ,CAACV,GAAT,KAAiBA,GAAzC,CAAnB;;AACA,QAAIQ,UAAJ,EAAgB;AACZJ,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEhB,oBADD;AAELK,QAAAA,GAAG,EAAEA,GAFA;AAGLY,QAAAA,gBAAgB,EAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,GAAwC;AAHrD,OAAD,CAAR;AAKAhB,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EACtB,GAAGY,UADmB;AACPI,QAAAA,gBAAgB,EAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,GAAwC;AADnD,OAAhB,CAAV;AAGH,KATD,MASO;AACHR,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEjB,WADD;AAELoB,QAAAA,OAAO,EAAE,EAAE,GAAGZ,IAAL;AAAWU,UAAAA,gBAAgB,EAAE;AAA7B;AAFJ,OAAD,CAAR;AAIAhB,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGM,IAAL;AAAWU,QAAAA,gBAAgB,EAAE;AAA7B,OAAhB,CAAV;AACH;AACJ,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,aAAYZ,GAAI,EAA3B;AAAA,8BACI;AAAK,QAAA,GAAG,EAAED,IAAV;AAAgB,QAAA,GAAG,EAAG,WAAUD,KAAM;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,8BACI;AAAA,wBAAQE,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA3CQV,W;;KAAAA,W;AA2CR;AAED,eAAeA,WAAf","sourcesContent":["// PRODUCT ITEM\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { pluralize } from '../../utils/helpers';\r\nimport { useStoreContent } from '../../utils/GlobaState';\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction ProductItem() {\r\n    const {\r\n        image,\r\n        name,\r\n        _id,\r\n        price,\r\n    } = item;\r\n\r\n    const [state, dispatch] = useStoreContext();\r\n    const { cart } = state;\r\n\r\n    const addToCart = () => {\r\n        const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n        if (itemInCart) {\r\n            dispatch({\r\n                type: UPDATE_CART_QUANTITY,\r\n                _id: _id,\r\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n            });\r\n            idbPromise('cart', 'put', {\r\n                ...itemInCart, purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: ADD_TO_CART,\r\n                product: { ...item, purchaseQuantity: 1 }\r\n            });\r\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card px-1 py-1\">\r\n            <Link to={`/products/${_id}`}>\r\n                <img alt={name} src={`/images/${image}`} />\r\n                <p>{name}</p>\r\n            </Link>\r\n            <div>\r\n                <span>${price}</span>\r\n                <button onClick={addToCart}>Add to cart!</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductItem;"]},"metadata":{},"sourceType":"module"}