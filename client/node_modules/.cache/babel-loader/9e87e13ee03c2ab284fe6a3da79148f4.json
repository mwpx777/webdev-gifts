{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mwpx7\\\\Documents\\\\GitHub\\\\webdev-gifts\\\\client\\\\src\\\\components\\\\CartItem\\\\index.js\",\n    _s = $RefreshSig$();\n\n// CART ITEM\nimport React from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartItem = ({\n  item\n}) => {\n  _s();\n\n  const [state, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    }); // remove item from indexedDB\n\n    idbPromise('cart', 'delete', { ...item\n    });\n  };\n\n  const onChange = e => {\n    const value = e.target.value; // if number set to zero, remove item from cart\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item\n      });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: parseInt(value)\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${item.image}`,\n        alt: item.name,\n        id: \"cartImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"$\", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"1\",\n          value: item.purchaseQuantity,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => removeFromCart(item),\n          role: \"img\",\n          \"aria-label\": \"trash\",\n          children: \"id=\\\"trashCan\\\" \\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartItem, \"qZ9GHftpIX86+oMFVfpp6r+956w=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["C:/Users/mwpx7/Documents/GitHub/webdev-gifts/client/src/components/CartItem/index.js"],"names":["React","useStoreContext","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","idbPromise","CartItem","item","state","dispatch","removeFromCart","type","_id","onChange","e","value","target","purchaseQuantity","parseInt","image","name","price"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,qBAAvD;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,eAAe,EAAzC;;AAEA,QAAMQ,cAAc,GAAGH,IAAI,IAAI;AAC3BE,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,gBADD;AAELS,MAAAA,GAAG,EAAEL,IAAI,CAACK;AAFL,KAAD,CAAR,CAD2B,CAK3B;;AACAP,IAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGE;AAAL,KAAnB,CAAV;AACH,GAPD;;AASA,QAAMM,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB,CADoB,CAGpB;;AACA,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACfN,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAER,gBADD;AAELS,QAAAA,GAAG,EAAEL,IAAI,CAACK;AAFL,OAAD,CAAR;AAIAP,MAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGE;AAAL,OAAnB,CAAV;AACH,KAND,MAMO;AACHE,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEP,oBADD;AAELQ,QAAAA,GAAG,EAAEL,IAAI,CAACK,GAFL;AAGLK,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAHrB,OAAD,CAAR;AAKAV,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGE,IAAL;AAAWU,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAArC,OAAhB,CAAV;AACH;AACJ,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA,6BACI;AAAK,QAAA,GAAG,EAAG,WAAUR,IAAI,CAACY,KAAM,EAAhC;AAAmC,QAAA,GAAG,EAAEZ,IAAI,CAACa,IAA7C;AAAmD,QAAA,EAAE,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,8BACI;AAAA,mBAAMb,IAAI,CAACa,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,wBAAOb,IAAI,CAACc,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,WAAW,EAAC,GAFhB;AAGI,UAAA,KAAK,EAAEd,IAAI,CAACU,gBAHhB;AAII,UAAA,QAAQ,EAAEJ;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AACI,UAAA,OAAO,EAAE,MAAMH,cAAc,CAACH,IAAD,CADjC;AAEI,UAAA,IAAI,EAAC,KAFT;AAGI,wBAAW,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA1DD;;GAAMD,Q;UACwBJ,e;;;KADxBI,Q;AA4DN,eAAeA,QAAf","sourcesContent":["// CART ITEM\n\nimport React from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nconst CartItem = ({ item }) => {\n    const [state, dispatch] = useStoreContext();\n\n    const removeFromCart = item => {\n        dispatch({\n            type: REMOVE_FROM_CART,\n            _id: item._id\n        });\n        // remove item from indexedDB\n        idbPromise('cart', 'delete', { ...item });\n    }\n\n    const onChange = (e) => {\n        const value = e.target.value;\n\n        // if number set to zero, remove item from cart\n        if (value === '0') {\n            dispatch({\n                type: REMOVE_FROM_CART,\n                _id: item._id\n            });\n            idbPromise('cart', 'delete', { ...item });\n        } else {\n            dispatch({\n                type: UPDATE_CART_QUANTITY,\n                _id: item._id,\n                purchaseQuantity: parseInt(value)\n            });\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n        }\n    };\n\n    return (\n        <div className=\"flex-row\" >\n            <div>\n                <img src={`/images/${item.image}`} alt={item.name} id=\"cartImage\"/>\n            </div>\n            <div>\n                <div>{item.name} </div>\n                <div>${item.price}</div>\n                <div>\n                    <span>Quantity:</span>\n                    <input\n                        type=\"number\"\n                        placeholder=\"1\"\n                        value={item.purchaseQuantity}\n                        onChange={onChange} />\n                    <span\n                        onClick={() => removeFromCart(item)}\n                        role=\"img\"\n                        aria-label=\"trash\">\n                            id=\"trashCan\"\n                        üóëÔ∏è\n                </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}