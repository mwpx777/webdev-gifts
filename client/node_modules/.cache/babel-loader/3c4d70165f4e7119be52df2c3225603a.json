{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mwpx7\\\\Documents\\\\GitHub\\\\webdev-gifts\\\\client\\\\src\\\\pages\\\\Detail.js\",\n    _s = $RefreshSig$();\n\n//  DETAIL\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\nimport { useStoreContext } from '../utils/GlobalState';\nimport Cart from '../components/Cart';\nimport { idbPromise } from '../utils/helpers';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from '../utils/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Detail() {\n  _s();\n\n  const [state, dispatch] = useStoreContext();\n  const {\n    id\n  } = useParams();\n  const {\n    currentProduct,\n    setCurrentProduct\n  } = useState({});\n  const [loading, data] = useQuery(QUERY_PRODUCTS);\n  const {\n    products,\n    cart\n  } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...currentProduct,\n        purchaseQuantity: 1\n      });\n    }\n\n    ;\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise('cart', 'delete', { ...currentProduct\n    });\n  };\n\n  useEffect(() => {\n    // products already in GlobalStore\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id)); // data retrieved from server\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then(products => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentProduct ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-1\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u2190 Back to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentProduct.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Price: \", currentProduct.price, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCart,\n          children: \"Add To Cart!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disables: !cart.find(p => p._id === currentProduct.id),\n          onClick: removeFromCart,\n          children: \"Remove From Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${currentProduct.image}`,\n        alt: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spinner,\n      alt: \"loading spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Detail, \"aEl+SkMVjTWLjBi5xRrFs/ehSSw=\", false, function () {\n  return [useStoreContext, useParams, useQuery];\n});\n\n_c = Detail;\n;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["C:/Users/mwpx7/Documents/GitHub/webdev-gifts/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","QUERY_PRODUCTS","spinner","useStoreContext","Cart","idbPromise","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","Detail","state","dispatch","id","currentProduct","setCurrentProduct","loading","data","products","cart","addToCart","itemInCart","find","cartItem","_id","type","purchaseQuantity","parseInt","product","removeFromCart","length","then","name","description","price","p","image"],"mappings":"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","sourcesContent":["//  DETAIL\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport spinner from '../assets/spinner.gif'\r\nimport { useStoreContext } from '../utils/GlobalState';\r\nimport Cart from '../components/Cart';\r\nimport { idbPromise } from '../utils/helpers';\r\nimport {\r\n    REMOVE_FROM_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    ADD_TO_CART,\r\n    UPDATE_PRODUCTS\r\n} from '../utils/actions';\r\n\r\nfunction Detail() {\r\n    const [state, dispatch] = useStoreContext();\r\n    const { id } = useParams();\r\n    const { currentProduct, setCurrentProduct } = useState({});\r\n    const [loading, data] = useQuery(QUERY_PRODUCTS);\r\n    const { products, cart } = state;\r\n\r\n    const addToCart = () => {\r\n        const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n\r\n        if (itemInCart) {\r\n            dispatch({\r\n                type: UPDATE_CART_QUANTITY,\r\n                _id: _id,\r\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n            });\r\n\r\n            idbPromise('cart', 'put', {\r\n                ...itemInCart,\r\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: ADD_TO_CART,\r\n                product: { ...currentProduct, purchaseQuantity: 1 }\r\n            });\r\n            idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n        };\r\n    };\r\n\r\n    const removeFromCart = () => {\r\n        dispatch({\r\n            type: REMOVE_FROM_CART,\r\n            _id: currentProduct._id\r\n        });\r\n        idbPromise('cart', 'delete', { ...currentProduct });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // products already in GlobalStore\r\n        if (products.length) {\r\n            setCurrentProduct(products.find(product => product._id === id));\r\n\r\n            // data retrieved from server\r\n        } else if (data) {\r\n            dispatch({\r\n                type: UPDATE_PRODUCTS,\r\n                products: data.products\r\n            });\r\n        } else if (!loading) {\r\n            idbPromise('products', 'get').then((products) => {\r\n                dispatch({\r\n                    type: UPDATE_PRODUCTS,\r\n                    products: products\r\n                });\r\n            });\r\n        }\r\n    }, [products, data, loading, dispatch, id]);\r\n\r\n    return (\r\n        <>\r\n            {currentProduct ? (\r\n                <div className=\"container my-1\">\r\n                    <Link to=\"/\">\r\n                        ← Back to Products\r\n                </Link>\r\n                    <h2>{currentProduct.name}</h2>\r\n                    <p>{currentProduct.description}</p>\r\n                    <p>\r\n                        <strong>Price: {currentProduct.price}{\" \"}</strong>\r\n                        <button onClick={addToCart}>\r\n                            Add To Cart!\r\n                </button>\r\n                        <button\r\n                            disables={!cart.find(p => p._id === currentProduct.id)}\r\n                            onClick={removeFromCart}>\r\n                            Remove From Cart\r\n                </button>\r\n                    </p>\r\n                    <img src={`/images/${currentProduct.image}`} alt={currentProduct.name} />\r\n                </div>\r\n            ) : null}\r\n            {\r\n                loading ? <img src={spinner} alt=\"loading spinner\" /> : null\r\n            }\r\n            <Cart />\r\n        </>\r\n    );\r\n};\r\nexport default Detail;"]},"metadata":{},"sourceType":"module"}