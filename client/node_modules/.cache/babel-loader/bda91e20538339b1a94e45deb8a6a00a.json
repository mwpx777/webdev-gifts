{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Class\\\\Class project3\\\\Class Store\\\\webdev-gifts\\\\client\\\\src\\\\utils\\\\GlobalState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// GLOBAL STATE\nimport React, { createContext, useContext } from 'react';\nimport { useProductReducer } from './reducers'; // create new Context object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = StoreContext;\n\nconst StoreProvider = ({\n  value = [],\n  ...props\n}) => {\n  _s();\n\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: ''\n  });\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: [state, dispatch],\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n}; // when this function runs within a component, will receive [state, dispatch] date the StoreProvier manages\n\n\n_s(StoreProvider, \"+o3qZ9et/jniNTC6+QmS1FPgXVA=\", false, function () {\n  return [useProductReducer];\n});\n\n_c = StoreProvider;\n\nconst useStoreContext = () => {\n  _s2();\n\n  return useContext(StoreContext);\n};\n\n_s2(useStoreContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { StoreProvider, useStoreContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["D:/School/Class/Class project3/Class Store/webdev-gifts/client/src/utils/GlobalState.js"],"names":["React","createContext","useContext","useProductReducer","StoreContext","Provider","StoreProvider","value","props","state","dispatch","products","cart","cartOpen","categories","currentCategory","useStoreContext"],"mappings":";;;;AAAA;AAEA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,SAAQC,iBAAR,QAAgC,YAAhC,C,CAEA;;;AACA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AACA,MAAM;AAACI,EAAAA;AAAD,IAAaD,YAAnB;;AAEA,MAAME,aAAa,GAAG,CAAC;AAACC,EAAAA,KAAK,GAAE,EAAR;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,iBAAiB,CAAC;AACxCQ,IAAAA,QAAQ,EAAE,EAD8B;AAExCC,IAAAA,IAAI,EAAE,EAFkC;AAGxCC,IAAAA,QAAQ,EAAE,KAH8B;AAIxCC,IAAAA,UAAU,EAAE,EAJ4B;AAKxCC,IAAAA,eAAe,EAAE;AALuB,GAAD,CAA3C;AAOA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAI,CAACN,KAAD,EAAQC,QAAR,CAAnB;AAAA,OAA0CF;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CATD,C,CAWA;;;GAXMF,a;UACwBH,iB;;;KADxBG,a;;AAYN,MAAMU,eAAe,GAAG,MAAM;AAAA;;AAC1B,SAAOd,UAAU,CAACE,YAAD,CAAjB;AACH,CAFD;;IAAMY,e;;AAIN,SAAQV,aAAR,EAAuBU,eAAvB","sourcesContent":["// GLOBAL STATE\n\nimport React, {createContext, useContext} from 'react';\nimport {useProductReducer} from './reducers';\n\n// create new Context object\nconst StoreContext = createContext();\nconst {Provider} = StoreContext;\n\nconst StoreProvider = ({value= [], ...props}) => {\n    const [state, dispatch] = useProductReducer({\n        products: [],\n        cart: [],\n        cartOpen: false,\n        categories: [],\n        currentCategory: ''\n    });\n    return <Provider value = {[state, dispatch]} {...props} />\n};\n\n// when this function runs within a component, will receive [state, dispatch] date the StoreProvier manages\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport {StoreProvider, useStoreContext};"]},"metadata":{},"sourceType":"module"}