{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mwpx7\\\\Documents\\\\GitHub\\\\webdev-gifts\\\\client\\\\src\\\\pages\\\\Detail.js\",\n    _s = $RefreshSig$();\n\n//  DETAIL\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\nimport { useStoreContext } from '../utils/GlobalState';\nimport Cart from '../components/Cart';\nimport { idbPromise } from '../utils/helpers';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from '../utils/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Detail() {\n  _s();\n\n  const [state, dispatch] = useStoreContext();\n  const {\n    id\n  } = useParams();\n  const {\n    currentProduct,\n    setCurrentProduct\n  } = useState({});\n  const [loading, data] = useQuery(QUERY_PRODUCTS);\n  const {\n    products,\n    cart\n  } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...currentProduct,\n        purchaseQuantity: 1\n      });\n    }\n\n    ;\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise('cart', 'delete', { ...currentProduct\n    });\n  };\n\n  useEffect(() => {\n    // products already in globalStore\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id)); // retrieved from server\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      }); // get cache from idb\n    } else if (!loading) {\n      idbPromise('products', 'get').then(products => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]); // useEffect(() => {\n  //     // products already in GlobalStore\n  //     if (products.length) {\n  //         setCurrentProduct(products.find(product => product._id === id));\n  //         // data retrieved from server\n  //     } else if (data) {\n  //         dispatch({\n  //             type: UPDATE_PRODUCTS,\n  //             products: data.products\n  //         });\n  //     } else if (!loading) {\n  //         idbPromise('products', 'get').then((products) => {\n  //             dispatch({\n  //                 type: UPDATE_PRODUCTS,\n  //                 products: products\n  //             });\n  //         });\n  //     }\n  // }, [products, data, loading, dispatch, id]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [currentProduct ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-1\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u2190 Back to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentProduct.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Price: \", currentProduct.price, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCart,\n          children: \"Add To Cart!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disables: !cart.find(p => p._id === currentProduct.id),\n          onClick: removeFromCart,\n          children: \"Remove From Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/${currentProduct.image}`,\n        alt: currentProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spinner,\n      alt: \"loading spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Detail, \"aEl+SkMVjTWLjBi5xRrFs/ehSSw=\", false, function () {\n  return [useStoreContext, useParams, useQuery];\n});\n\n_c = Detail;\n;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["C:/Users/mwpx7/Documents/GitHub/webdev-gifts/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","QUERY_PRODUCTS","spinner","useStoreContext","Cart","idbPromise","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","Detail","state","dispatch","id","currentProduct","setCurrentProduct","loading","data","products","cart","addToCart","itemInCart","find","cartItem","_id","type","purchaseQuantity","parseInt","product","removeFromCart","length","forEach","then","name","description","price","p","image"],"mappings":"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","sourcesContent":["//  DETAIL\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif'\nimport { useStoreContext } from '../utils/GlobalState';\nimport Cart from '../components/Cart';\nimport { idbPromise } from '../utils/helpers';\nimport {\n    REMOVE_FROM_CART,\n    UPDATE_CART_QUANTITY,\n    ADD_TO_CART,\n    UPDATE_PRODUCTS\n} from '../utils/actions';\n\nfunction Detail() {\n    const [state, dispatch] = useStoreContext();\n    const { id } = useParams();\n    const { currentProduct, setCurrentProduct } = useState({});\n    const [loading, data] = useQuery(QUERY_PRODUCTS);\n    const { products, cart } = state;\n\n    const addToCart = () => {\n        const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n        if (itemInCart) {\n            dispatch({\n                type: UPDATE_CART_QUANTITY,\n                _id: id,\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n            });\n\n            idbPromise('cart', 'put', {\n                ...itemInCart,\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n            })\n        } else {\n            dispatch({\n                type: ADD_TO_CART,\n                product: { ...currentProduct, purchaseQuantity: 1 }\n            });\n            idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n        };\n    };\n\n    const removeFromCart = () => {\n        dispatch({\n            type: REMOVE_FROM_CART,\n            _id: currentProduct._id\n        });\n        idbPromise('cart', 'delete', { ...currentProduct });\n    };\n    useEffect(() => {\n        // products already in globalStore\n        if (products.length) {\n          setCurrentProduct(products.find(product => product._id === id));\n    \n          // retrieved from server\n        } else if (data) {\n          dispatch({\n            type: UPDATE_PRODUCTS,\n            products: data.products\n          });\n    \n          data.products.forEach(product => {\n            idbPromise('products', 'put', product);\n          });\n    \n    \n          // get cache from idb\n        } else if (!loading) {\n          idbPromise('products', 'get').then((products) => {\n            dispatch({\n              type: UPDATE_PRODUCTS,\n              products: products\n            });\n          });\n        }\n      }, [products, data, loading, dispatch, id]);\n\n    // useEffect(() => {\n    //     // products already in GlobalStore\n    //     if (products.length) {\n    //         setCurrentProduct(products.find(product => product._id === id));\n\n    //         // data retrieved from server\n    //     } else if (data) {\n    //         dispatch({\n    //             type: UPDATE_PRODUCTS,\n    //             products: data.products\n    //         });\n    //     } else if (!loading) {\n    //         idbPromise('products', 'get').then((products) => {\n    //             dispatch({\n    //                 type: UPDATE_PRODUCTS,\n    //                 products: products\n    //             });\n    //         });\n    //     }\n    // }, [products, data, loading, dispatch, id]);\n\n    return (\n        <>\n            {currentProduct ? (\n                <div className=\"container my-1\">\n                    <Link to=\"/\">\n                        ← Back to Products\n                </Link>\n                    <h2>{currentProduct.name}</h2>\n                    <p>{currentProduct.description}</p>\n                    <p>\n                        <strong>Price: {currentProduct.price}{\" \"}</strong>\n                        <button onClick={addToCart}>\n                            Add To Cart!\n                </button>\n                        <button\n                            disables={!cart.find(p => p._id === currentProduct.id)}\n                            onClick={removeFromCart}>\n                            Remove From Cart\n                </button>\n                    </p>\n                    <img src={`/images/${currentProduct.image}`} alt={currentProduct.name} />\n                </div>\n            ) : null}\n            {\n                loading ? <img src={spinner} alt=\"loading spinner\" /> : null\n            }\n            <Cart />\n        </>\n    );\n};\nexport default Detail;"]},"metadata":{},"sourceType":"module"}